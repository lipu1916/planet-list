{"version":3,"sources":["components/TabItem.js","components/Tab.js","App.js","reportWebVitals.js","index.js"],"names":["TabItem","onClick","props","label","this","activeTab","className","Component","Tab","onClickTabItem","tab","setState","state","children","map","child","App","prop","planetList","fetch","then","result","json","list","console","log","item","name","style","marginLeft","index","findIndex","e","id","favList","isFavourite","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAyCeA,G,kNA/BbC,QAAU,WAAO,IAAD,EACa,EAAKC,MAAxBC,EADM,EACNA,OACRF,EAFc,EACCA,SACPE,I,uDAGA,IAENF,EAKEG,KALFH,QAFK,EAOHG,KAJFF,MACEG,EAJG,EAIHA,UACAF,EALG,EAKHA,MAIAG,EAAY,gBAMhB,OAJID,IAAcF,IAChBG,GAAa,oBAIb,oBACEA,UAAWA,EACXL,QAASA,EAFX,SAIGE,Q,GAhCaI,cCwDPC,E,kDAlDX,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IAORO,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEN,UAAWK,KAN3B,EAAKE,MAAQ,CACXP,UAAW,EAAKH,MAAMW,SAAS,GAAGX,MAAMC,OAJzB,E,qDAYX,IAENM,EAOEL,KAPFK,eAEEI,EAKAT,KANFF,MACEW,SAGAR,EAEAD,KAHFQ,MACEP,UAIJ,OACE,sBAAKC,UAAU,OAAf,UACE,oBAAIA,UAAU,WAAd,SACGO,EAASC,KAAI,SAACC,GAAW,IAChBZ,EAAUY,EAAMb,MAAhBC,MAER,OACE,cAAC,EAAD,CACEE,UAAWA,EAEXF,MAAOA,EACPF,QAASQ,GAFJN,QAOb,qBAAKG,UAAU,cAAf,SACGO,EAASC,KAAI,SAACC,GACb,GAAIA,EAAMb,MAAMC,QAAUE,EAC1B,OAAOU,EAAMb,MAAMW,qB,GA/CbN,aC+DHS,E,kDA9Db,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDL,MAAQ,CACXM,WAAY,IAHE,E,gEAMG,IAAD,OAClBC,MAAM,qDAAqDC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UAAQF,MACvF,SAAAG,GACEC,QAAQC,IAAIF,GACZ,EAAKZ,SAAS,CAACO,WAAYK,S,+BAIvB,IAAD,OACP,OACE,eAAC,EAAD,WACC,qBAAKpB,MAAM,UAAX,SAEIC,KAAKQ,MAAMM,WAAWJ,KAAI,SAACY,GACzB,OACE,6BACE,gCACE,+BAAOA,EAAKC,OACZ,wBACAC,MAAO,CAACC,WAAa,IACrB5B,QAAW,WACT,IAAM6B,EAAQ,EAAKlB,MAAMM,WAAWa,WAAU,SAAAC,GAAC,OAAIA,EAAEC,KAAOP,EAAKO,MAC7DC,EAAU,EAAKtB,MAAMM,WACzBgB,EAAQJ,GAAOK,aAAeD,EAAQJ,GAAOK,YAC7C,EAAKxB,SAAS,CAACO,WAAagB,KAN9B,SAWIR,EAAKS,YAAc,cAAgB,kBAdlCT,EAAKO,SAuBtB,qBAAK9B,MAAM,aAAX,SAEIC,KAAKQ,MAAMM,WAAWkB,QAAO,SAAAV,GAAI,OAAyB,IAArBA,EAAKS,eAAsBrB,KAAI,SAACY,GACnE,OACE,6BACE,8BACGA,EAAKC,QAFDD,EAAKO,gB,GAjDX1B,aCQH8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a5a2e509.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TabItem extends Component {\r\n  static propTypes = {\r\n    activeTab: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  onClick = () => {\r\n    const { label, onClick } = this.props;\r\n    onClick(label);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: {\r\n        activeTab,\r\n        label,\r\n      },\r\n    } = this;\r\n\r\n    let className = 'tab-list-item';\r\n\r\n    if (activeTab === label) {\r\n      className += ' tab-list-active';\r\n    }\r\n\r\n    return (\r\n      <li\r\n        className={className}\r\n        onClick={onClick}\r\n      >\r\n        {label}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabItem;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TabItem from './TabItem';\r\n\r\nclass Tab extends Component {\r\n    static propTypes = {\r\n      children: PropTypes.instanceOf(Array).isRequired,\r\n    }\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        activeTab: this.props.children[0].props.label,\r\n      };\r\n    }\r\n  \r\n    onClickTabItem = (tab) => {\r\n      this.setState({ activeTab: tab });\r\n    }\r\n\r\n  render() {\r\n    const {\r\n      onClickTabItem,\r\n      props: {\r\n        children,\r\n      },\r\n      state: {\r\n        activeTab,\r\n      }\r\n    } = this;\r\n\r\n    return (\r\n      <div className=\"tabs\">\r\n        <ol className=\"tab-list\">\r\n          {children.map((child) => {\r\n            const { label } = child.props;\r\n\r\n            return (\r\n              <TabItem\r\n                activeTab={activeTab}\r\n                key={label}\r\n                label={label}\r\n                onClick={onClickTabItem}\r\n              />\r\n            );\r\n          })}\r\n        </ol>\r\n        <div className=\"tab-content\">\r\n          {children.map((child) => {\r\n            if (child.props.label !== activeTab) return undefined;\r\n            return child.props.children;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tab;","import { Component } from 'react';\nimport './App.css';\nimport Tab from './components/Tab'\n\nclass App extends Component {\n  constructor(prop) {\n    super(prop)\n    this.state = {\n      planetList: []\n    }\n  }\n  componentDidMount() {\n    fetch(\"https://assignment-machstatz.herokuapp.com/planet\").then(result => result.json()).then(\n      list => {\n        console.log(list)\n        this.setState({planetList: list})\n      }\n    )\n  }\n  render() {\n    return(\n      <Tab > \n       <div label=\"Planets\"> \n         {\n           this.state.planetList.map((item) => {\n             return(\n               <ol key={item.id}>\n                 <div>\n                   <span>{item.name}</span>\n                   <button\n                   style={{marginLeft : 20}}\n                   onClick = {() => {\n                     const index = this.state.planetList.findIndex(e => e.id === item.id)\n                     var favList = this.state.planetList\n                     favList[index].isFavourite = !favList[index].isFavourite\n                     this.setState({planetList : favList})\n                   }\n                   }\n                   >\n                     {\n                       item.isFavourite ? \"UnFavourite\" : \"Favourite\"\n                     }\n                   </button>\n                 </div>\n               </ol>\n             )\n           })\n         }\n       </div> \n       <div label=\"Favourites\"> \n       {\n           this.state.planetList.filter(item => item.isFavourite === true).map((item) => {\n             return(\n               <ol key={item.id}>\n                 <div>\n                   {item.name}\n                 </div>\n               </ol>\n             )\n           })\n         } \n       </div> \n     </Tab> \n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}